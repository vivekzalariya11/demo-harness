pipeline:
  name: sample harness
  identifier: sample_harness
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: samplepipeline
        repoName: harness-community/go-pipeline-sample
        build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Print Message Hello world
                  identifier: Print_Message_Hello_world
                  spec:
                    shell: Sh
                    command: echo "Hello world !!!"
              - step:
                  type: Run
                  name: Run Test Case
                  identifier: Run_Test_Case
                  spec:
                    connectorRef: <+input>
                    image: golang:1.15
                    shell: Sh
                    command: |-
                      set +e
                      go get gotest.tools/gotestsum
                      gotestsum --format=standard-verbose --junitfile unit-tests.xml
                      exit 0
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "*.xml"
              - step:
                  type: Run
                  name: Build app
                  identifier: Build_app
                  spec:
                    connectorRef: <+input>
                    image: golang:1.15
                    shell: Sh
                    command: |-
                      set +e
                      go get gotest.tools/gotestsum
                      CGO_ENABLED=0 GOOS=linux GOARCH=am64 go build -a -tags netgo
                      exit 0
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build And Push image to DockerHub
                  identifier: Build_And_Push_image_to_DockerHub
                  spec:
                    connectorRef: dockerconnector
                    repo: vivekzalariya13/demo-harness
                    tags:
                      - latest
